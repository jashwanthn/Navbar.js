src/components/AccessConfiguration.js
import React, { useState } from "react";
import "./AccessConfiguration.css";

/*
  AccessConfiguration (desktop)
  - No flexbox
  - Forces placement to the right of a 240px sidebar and below a 104px header
  - Uses plain CSS; replace both files and restart dev server
*/

export default function AccessConfiguration() {
  const initialRows = [
    {
      id: 1,
      adGroup: "Wealth Compliance",
      folder: "Compliance",
      reports: ["KYC Reports", "Dormant Reports", "AML Reports"],
      assignedTo: "Swapnil"
    },
    {
      id: 2,
      adGroup: "Wealth User",
      folder: "Global User",
      reports: ["Active User", "Inactive User"],
      assignedTo: "sarvesh"
    },
  ];

  const [userSearch, setUserSearch] = useState("");
  const [selectedADGroup, setSelectedADGroup] = useState("");
  const [rows, setRows] = useState(initialRows);

  const adGroups = [
    { key: "Wealth Compliance", folder: "Compliance", reports: ["KYC Reports", "Dormant Reports", "AML Reports"] },
    { key: "Wealth User", folder: "Global User", reports: ["Active User", "Inactive User"] },
    { key: "Risk Team", folder: "Credit Risk", reports: ["Risk Summary", "Limit Breaches"] },
  ];

  function handleAdd() {
    if (!userSearch.trim() || !selectedADGroup) return;

    const groupMeta = adGroups.find((g) => g.key === selectedADGroup);
    if (!groupMeta) return;

    const newRow = {
      id: Date.now(),
      adGroup: groupMeta.key,
      folder: groupMeta.folder,
      reports: groupMeta.reports,
      assignedTo: userSearch.trim(),
    };

    setRows((r) => [newRow, ...r]);
    setUserSearch("");
    setSelectedADGroup("");
  }

  function handleDelete(id) {
    setRows((r) => r.filter((row) => row.id !== id));
  }

  return (
    <section className="ac-wrapper" role="region" aria-label="Access Configuration">
      <div className="ac-card">
        <header className="ac-header">
          <div className="ac-title">Access Configuration</div>
          <div className="ac-user" aria-hidden="true">
            <div className="ac-user-name">Admin</div>
            <div className="ac-avatar" />
          </div>
        </header>

        <div className="ac-controls">
          <div className="ac-row">
            <label className="ac-label" htmlFor="ac-user">User</label>
            <input
              id="ac-user"
              className="ac-input"
              placeholder="Search or enter username (e.g. ayush.s)"
              value={userSearch}
              onChange={(e) => setUserSearch(e.target.value)}
            />

            <label className="ac-label ac-label-small" htmlFor="ac-adgroup">AD Group</label>
            <select
              id="ac-adgroup"
              className="ac-select"
              value={selectedADGroup}
              onChange={(e) => setSelectedADGroup(e.target.value)}
            >
              <option value="">Select AD Group</option>
              {adGroups.map((g) => (
                <option key={g.key} value={g.key}>
                  {g.key}
                </option>
              ))}
            </select>

            <div className="ac-add-col">
              <button onClick={handleAdd} className="ac-btn-primary" type="button">Add</button>
            </div>
          </div>
        </div>

        <div className="ac-table-wrap">
          <table className="ac-table" role="table">
            <thead>
              <tr>
                <th>AD Group Name</th>
                <th>Folder</th>
                <th>Report Name(s)</th>
                <th>Assigned To</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              {rows.length === 0 && (
                <tr>
                  <td colSpan="5" className="ac-empty">No mappings yet ‚Äî add a user and AD Group to start.</td>
                </tr>
              )}

              {rows.map((row) => (
                <tr key={row.id}>
                  <td className="ac-strong">{row.adGroup}</td>
                  <td>{row.folder}</td>
                  <td>
                    {row.reports.map((r, i) => (
                      <div key={i} className="ac-report-item">{r}</div>
                    ))}
                  </td>
                  <td>{row.assignedTo || "-"}</td>
                  <td>
                    <button
                      onClick={() => handleDelete(row.id)}
                      className="ac-delete"
                      aria-label={`Delete ${row.adGroup}`}
                      title="Delete"
                    >
                      üóë
                    </button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>

          <div className="ac-help">Tip: AD Group configurations are synced from Active Directory. Assigning a user here grants access to the listed folders and reports.</div>
        </div>
      </div>
    </section>
  );
}


src/components/AccessConfiguration.css
/* AccessConfiguration.css - forced to the right of a 240px sidebar and below a 104px header */

/* IMPORTANT safety offsets:
   - Sidebar width: 240px (the left fixed sidebar)
   - Header total: 104px (topbar 34 + navbar 70)
   If you have different values, change them here.
*/
.ac-wrapper {
  box-sizing: border-box;
  /* Force the component to sit to the right of the sidebar */
  margin-left: 240px !important;
  /* Ensure it sits below fixed header */
  padding-top: 104px !important;
  padding-left: 24px !important;
  padding-right: 24px !important;
  padding-bottom: 40px !important;
  min-height: calc(100vh - 104px) !important;
  width: calc(100% - 240px) !important;
  background: transparent !important;
}

/* Card constrained & centered inside the content area */
.ac-card {
  background: #ffffff;
  max-width: 1100px;
  width: 100%;
  margin: 0 auto;
  border-radius: 10px;
  border: 1px solid rgba(0,0,0,0.06);
  box-shadow: 0 6px 18px rgba(0,0,0,0.06);
  overflow: hidden;
  box-sizing: border-box;
  position: relative;
}

/* Header */
.ac-header {
  display: grid;
  grid-template-columns: 1fr min-content;
  align-items: center;
  gap: 12px;
  padding: 18px 20px;
  border-bottom: 1px solid rgba(0,0,0,0.06);
  background: #fff;
}
.ac-title {
  font-size: 20px;
  font-weight: 600;
  color: #0f172a;
}
.ac-user {
  display: inline-block;
  white-space: nowrap;
  text-align: right;
}
.ac-user-name {
  color: #374151;
  font-size: 14px;
  display: inline-block;
  vertical-align: middle;
  margin-right: 8px;
}
.ac-avatar {
  display: inline-block;
  width: 36px;
  height: 36px;
  background: #f3f4f6;
  border-radius: 999px;
  vertical-align: middle;
}

/* Controls */
.ac-controls {
  padding: 18px 20px;
  border-bottom: 1px solid rgba(0,0,0,0.04);
}

/* Grid row for inputs (no flex) */
.ac-row {
  display: grid;
  grid-template-columns: 140px 1fr 140px 220px 120px;
  gap: 12px;
  align-items: center;
}

/* Labels */
.ac-label {
  color: #374151;
  font-weight: 600;
}
.ac-label-small { font-size: 13px; }

/* Inputs */
.ac-input,
.ac-select {
  padding: 10px 12px;
  border: 1px solid rgba(15, 23, 42, 0.08);
  border-radius: 8px;
  background: #fff;
  color: #0f172a;
  box-sizing: border-box;
  font-size: 14px;
  width: 100%;
  outline: none;
}
.ac-input:focus,
.ac-select:focus {
  border-color: rgba(59,130,246,0.35);
  box-shadow: 0 0 0 4px rgba(59,130,246,0.08);
}

/* Add button */
.ac-add-col { text-align: right; }
.ac-btn-primary {
  display: inline-block;
  background: #ffb400; /* gold to match header */
  color: #003366;
  padding: 10px 16px;
  border-radius: 8px;
  border: none;
  font-weight: 600;
  cursor: pointer;
}

/* Table area */
.ac-table-wrap {
  padding: 18px 20px 26px 20px;
  overflow-x: auto;
}

/* Table */
.ac-table {
  width: 100%;
  border-collapse: collapse;
  font-size: 14px;
}
.ac-table thead th {
  text-align: left;
  padding: 10px 12px;
  background: #f8fafc;
  border-bottom: 1px solid rgba(0,0,0,0.06);
  color: #111827;
  font-weight: 600;
}
.ac-table tbody td {
  padding: 12px;
  border-bottom: 1px solid rgba(0,0,0,0.04);
  color: #374151;
  vertical-align: top;
}
.ac-strong { font-weight: 600; color: #0f172a; }

/* report lines */
.ac-report-item { margin-bottom: 6px; }

/* delete button */
.ac-delete { background: transparent; border: none; cursor: pointer; font-size: 16px; }

/* Empty + help */
.ac-empty { text-align: center; padding: 30px 12px; color: #6b7280; }
.ac-help { margin-top: 12px; color: #6b7280; font-size: 13px; }

/* Small screens adjustments */
@media (max-width: 1100px) {
  .ac-wrapper { margin-left: 220px !important; width: calc(100% - 220px) !important; padding-top: 104px !important; }
  .ac-row { grid-template-columns: 120px 1fr; grid-auto-rows: auto; }
  .ac-add-col { grid-column: 1 / -1; text-align: left; margin-top: 8px; }
  .ac-label { display: none; }
  .ac-card { margin-left: 16px; margin-right: 16px; }
}

/* Fallback guard: if user forgot to add .content-with-sidebar to main, this prevents overlap */
@media (min-width: 900px) {
  body:not(.no-sidebar-left) .ac-wrapper { padding-left: 24px; }
  .ac-card { max-width: calc(100% - 40px); }
}



‚úÖ Replace your existing Navbar.css with this:

/* Navbar.css ‚Äî clean layout with resized Standard Chartered logo */

/* Navbar wrapper */
.navbar {
  position: fixed;
  top: 34px; /* adjust if you have a top contact bar above */
  left: 0;
  right: 0;
  height: 70px;
  background: linear-gradient(90deg, #002147, #003366);
  border-bottom: 1px solid rgba(255, 255, 255, 0.15);
  z-index: 99;
}

/* Container to align logo, links, and actions */
.navbar-container {
  display: grid;
  grid-template-columns: auto 1fr auto;
  align-items: center;
  height: 100%;
  padding: 0 40px;
  box-sizing: border-box;
}

/* Brand section (logo + text) */
.navbar-brand {
  display: inline-flex;
  align-items: center;
  gap: 10px;
}

/* ‚úÖ Resize logo neatly */
.img {
  height: 48px;   /* ‚Üê change this to 42px, 45px, or 50px as needed */
  width: auto;
  display: block;
  border-radius: 4px; /* optional soft edges */
}

/* Brand text */
.brand-link {
  font-size: 20px;
  font-weight: 600;
  color: #ffffff;
  text-decoration: none;
  letter-spacing: 0.4px;
}

/* Navbar links */
.navbar-nav {
  text-align: center;
}
.navbar-nav .nav-items {
  list-style: none;
  margin: 0;
  padding: 0;
}
.navbar-nav .nav-items li {
  display: inline-block;
  margin: 0 18px;
}
.navbar-nav .nav-items a {
  color: #ffffff;
  font-weight: 500;
  text-decoration: none;
  transition: color 0.2s ease;
}
.navbar-nav .nav-items a:hover {
  color: #ffb400;
}

/* Action buttons (Login / Open Account) */
.navbar-actions {
  text-align: right;
}

.navbar-actions .btn-login {
  background: transparent;
  color: #ffffff;
  border: 1px solid #ffffff;
  border-radius: 4px;
  padding: 6px 14px;
  margin-right: 10px;
  cursor: pointer;
}
.navbar-actions .btn-login:hover {
  background: rgba(255, 255, 255, 0.1);
}

.navbar-actions .btn-open-account {
  background: #ffb400;
  color: #003366;
  border: none;
  border-radius: 4px;
  padding: 7px 16px;
  font-weight: 600;
  cursor: pointer;
}
.navbar-actions .btn-open-account:hover {
  background: #ffc933;
}

